import { GoogleGenAI } from "@google/genai";

const API_KEY = process.env.API_KEY;

if (!API_KEY) {
    throw new Error("API_KEY is not set in environment variables.");
}

const ai = new GoogleGenAI({ apiKey: API_KEY });

export const generateGermanGrammarLesson = async (topic: string): Promise<string> => {
    try {
        const systemInstruction = `ุฃูุช ูุฏุฑุณ ุฎุจูุฑ ูู ููุงุนุฏ ุงููุบุฉ ุงูุฃููุงููุฉ ูุชุฎุตุต ูู ุชุนููู ุงููุงุทููู ุจุงูุนุฑุจูุฉ. ูููุชู ูู ุดุฑุญ ุงูููุงููู ุงููุญููุฉ ุงูุฃููุงููุฉ ุจูุถูุญ ูุฏูุฉ ุจุงุณุชุฎุฏุงู ุงููุบุฉ ุงูุนุฑุจูุฉ ุงููุตุญู. ุงุณุชุฎุฏู ุชูุณูููุง ููุธููุง ูุน ุนูุงููู ูุฃูุซูุฉ ูุชุฑุฌูุงุช. ุงุฌุนู ุงูุดุฑุญ ููุงุณุจูุง ูููุจุชุฏุฆูู.`;

        const prompt = `
        ุงุดุฑุญ ุงููุงุนุฏุฉ ุงููุญููุฉ ุงูุฃููุงููุฉ ุงูุชุงููุฉ: "${topic}"

        ูุฌุจ ุฃู ูุชุจุน ุงูุดุฑุญ ุงููููู ุงูุชุงูู ุจุฏูุฉ:

        ### **ุนููุงู ุงููุงุนุฏุฉ**

        **1. ุงูุดุฑุญ:**
        ุดุฑุญ ูุจุณุท ููุงุถุญ ูููุงุนุฏุฉ.

        **2. ุฃูุซูุฉ:**
        - ุฌููุฉ ุฃููุงููุฉ (ูุน ุชุฑุฌูุชูุง ุจุงูุนุฑุจูุฉ).
        - ุฌููุฉ ุฃููุงููุฉ ุฃุฎุฑู (ูุน ุชุฑุฌูุชูุง ุจุงูุนุฑุจูุฉ).
        - ุฌููุฉ ุซุงูุซุฉ (ูุน ุชุฑุฌูุชูุง ุจุงูุนุฑุจูุฉ).

        **3. ููุฎุต ุฃู ุฌุฏูู (ุฅู ูุฌุฏ):**
        ุฅุฐุง ูุงู ุฐูู ููุงุณุจูุงุ ูู ุจุฅูุดุงุก ุฌุฏูู ุจุงุณุชุฎุฏุงู ุชูุณูู ุงููุงุฑูุฏุงูู (Markdown) ูุชูุฎูุต ุงููุนูููุงุช. ูุซุงู:
        | ุงูุญุงูุฉ | ุงููุฐูุฑ (Der) | ุงููุคูุซ (Die) | ุงููุญุงูุฏ (Das) |
        |---|---|---|---|
        | Nominativ | der | die | das |
        | Akkusativ | den | die | das |


        **4. ููุงุญุธุงุช:**
        ุฃู ุงุณุชุซูุงุกุงุช ุฃู ููุงุท ูููุฉ ูุฌุจ ุชุฐูุฑูุง.
        `;

        const response = await ai.models.generateContent({
            model: 'gemini-2.5-flash',
            contents: prompt,
            config: {
                systemInstruction: systemInstruction,
                temperature: 0.4,
            }
        });

        return response.text;
    } catch (error) {
        console.error("Error generating lesson from Gemini API:", error);
        throw new Error("ูุดู ูู ุฅูุดุงุก ุงูุฏุฑุณ ูู ุฎุฏูุฉ ุงูุฐูุงุก ุงูุงุตุทูุงุนู. ุงูุฑุฌุงุก ุงูุชุญูู ูู ุงุชุตุงูู ูุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู.");
    }
};


export const elaborateOnExamples = async (topic: string, lessonText: string): Promise<string> => {
    try {
        const systemInstruction = `ุฃูุช ูุฏุฑุณ ุฎุจูุฑ ูู ููุงุนุฏ ุงููุบุฉ ุงูุฃููุงููุฉ ูุชุฎุตุต ูู ุชุนููู ุงููุงุทููู ุจุงูุนุฑุจูุฉ. ูููุชู ูู ุชุญููู ุงูุฃูุซูุฉ ุงููุญููุฉ ูุชูุฏูู ุดุฑูุญุงุช ููุตูุฉ ููุณุงุนุฏุฉ ุงููุชุนูููู ุนูู ููู ุงููุฑูู ุงูุฏูููุฉุ ูุน ุงูุชุฑููุฒ ุนูู ุงูุฃุฎุทุงุก ุงูุดุงุฆุนุฉ.`;

        const prompt = `
        ุจูุงุกู ุนูู ุฏุฑุณ ููุงุนุฏ ุงููุบุฉ ุงูุฃููุงููุฉ ุงูุชุงูู ุญูู ููุถูุน "${topic}":
        --- ุจุฏุงูุฉ ุงูุฏุฑุณ ---
        ${lessonText}
        --- ููุงูุฉ ุงูุฏุฑุณ ---

        ูููุชู ูู ุชูุฏูู ุดุฑุญ ููุตู ููู ุฌููุฉ ูุซุงู ููุฌูุฏุฉ ูู ุงูุฏุฑุณ ุฃุนูุงู.

        ููู ูุซุงูุ ุงุชุจุน ุงููููู ุงูุชุงูู ุจุฏูุฉ:

        **- [ุงูุฌููุฉ ุงูุฃููุงููุฉ ุงูุฃุตููุฉ] ([ุชุฑุฌูุชูุง ุจุงูุนุฑุจูุฉ])**

        **1. ุชุญููู ูุญูู:**
        ุงุดุฑุญ ุณุจุจ ุงุณุชุฎุฏุงู ุงูุชุฑุงููุจ ุงููุญููุฉ ุงููุญุฏุฏุฉ (ูุซู ุชุตุฑูู ุงููุนูุ ุญุงูุฉ ุงูุงุณูุ ุชุฑุชูุจ ุงููููุงุชุ ุฅูุฎ) ูู ูุฐู ุงูุฌููุฉ.

        **2. ุฎุทุฃ ุดุงุฆุน ูููุชุญุฏุซูู ุจุงูุนุฑุจูุฉ:**
        ุณูุท ุงูุถูุก ุนูู ุฎุทุฃ ูุญุชูู ูุฏ ูุฑุชูุจู ุงููุชุญุฏุซ ุจุงูุนุฑุจูุฉ ุนูุฏ ุชูููู ุฌููุฉ ููุงุซูุฉุ ูุงุดุฑุญ ููููุฉ ุชุฌูุจู.

        ุงุณุชุฎุฏู ุงููุบุฉ ุงูุนุฑุจูุฉ ุงููุตุญู ุงููุงุถุญุฉุ ููู ุจุชูุณูู ุงูุฅุฎุฑุงุฌ ุจุงุณุชุฎุฏุงู ุงููุงุฑูุฏุงูู (Markdown) ูุณูููุฉ ุงููุฑุงุกุฉ.
        `;

        const response = await ai.models.generateContent({
            model: 'gemini-2.5-flash',
            contents: prompt,
            config: {
                systemInstruction: systemInstruction,
                temperature: 0.5,
            }
        });

        return `### **๐ ุดุฑุญ ููุตู ูุฃูุซูุฉ ุฏุฑุณ "${topic}"**\n\n` + response.text;
    } catch (error) {
        console.error("Error elaborating on examples from Gemini API:", error);
        throw new Error("ูุดู ูู ุชุญููู ุงูุฃูุซูุฉ. ุงูุฑุฌุงุก ุงูุชุญูู ูู ุงุชุตุงูู ูุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู.");
    }
};

export const generateDiagram = async (topic: string): Promise<string> => {
    try {
        const systemInstruction = `ุฃูุช ุฎุจูุฑ ูู ุชุจุณูุท ููุงุนุฏ ุงููุบุฉ ุงูุฃููุงููุฉ ูููุงุทููู ุจุงูุนุฑุจูุฉ ุจุงุณุชุฎุฏุงู ุงููุฎุทุทุงุช. ูููุชู ูู ุฅูุดุงุก ููุฏ Mermaid.js ูุฅูุดุงุก ูุฎุทุท ุงูุณูุงุจู (flowchart) ุฃู ุฎุฑูุทุฉ ุฐูููุฉ (mindmap) ูุงุถุญุฉ ูุณููุฉ ุงูููู. ูุฌุจ ุฃู ูุญุชูู ุงููุฎุทุท ุนูู ุงููููุงุช ุงูุฑุฆูุณูุฉ ุจุงููุบุฉ ุงูุฃููุงููุฉ ูุชุฑุฌูุชูุง ุฃู ุดุฑุญูุง ุจุงูุนุฑุจูุฉ.`;

        const prompt = `
        ุฃูุดุฆ ูุฎุทุทูุง ุจุงุณุชุฎุฏุงู ุตูุบุฉ Mermaid.js ูุดุฑุญ ุงููุงุนุฏุฉ ุงููุญููุฉ ุงูุฃููุงููุฉ: "${topic}".

        ุฅุฑุดุงุฏุงุช:
        1.  ุงุณุชุฎุฏู ูุฎุทุทูุง ุงูุณูุงุจููุง (graph TD). ุงุฌุนู ุงุชุฌุงู ุงููุฎุทุท ูู ุงูุฃุนูู ููุฃุณูู.
        2.  ูุฌุจ ุฃู ูููู ุงููุฎุทุท ุจุณูุทูุง ููุฑุฆููุง ูููุธููุง ุจุดูู ููุทูู.
        3.  ุงุจุฏุฃ ุจุงูููููู ุงูุนุงู ูู ุงูุฃุนููุ ุซู ุชูุฑุน ุฅูู ุงููุฆุงุช ุงูุฑุฆูุณูุฉ (ูุซู ุงูุงุณุชุฎุฏุงูุงุชุ ุงูุชุตุฑููุ ุฅูุฎ).
        4.  ุงุณุชุฎุฏู ุงูุนูุฏ (nodes) ูุชูุถูุญ ุงูุฃุฌุฒุงุก ุงูุฑุฆูุณูุฉ ูููุงุนุฏุฉุ ูุงูุฃุณูู (edges) ูุฅุธูุงุฑ ุงูุนูุงูุงุช.
        5.  ูุฌุจ ุฃู ุชุญุชูู ุงูุนูุฏ ุนูู ูุตุทูุญุงุช ุฃููุงููุฉ ูููุฉ ูุน ุดุฑุญ ููุฌุฒ ุฃู ุชุฑุฌูุฉ ุจุงูุนุฑุจูุฉ.
        6.  ุงุฌูุน ุงูุฃูุซูุฉ ุฐุงุช ุงูุตูุฉ ูุนูุง ูู ููุณ ุงูุนูุฏุฉ ุฃู ูู ุนูุฏ ูุฑุนูุฉ ูุชุฌุงูุฑุฉ ููุญูุงุธ ุนูู ุงูุชูุงุฒู.
        7.  ุงูุฅุฌุงุจุฉ ูุฌุจ ุฃู ุชููู ููุท ููุฏ Mermaid.js ุตุงูุญูุง ููุบูููุง ุจู \`\`\`mermaid ... \`\`\`. ูุง ุชูู ุจุชุถููู ุฃู ูุต ุฃู ุดุฑุญ ุฅุถุงูู. **ููู**: ูุฌุจ ุฃู ุชุญุชูู ุฅุฌุงุจุชู **ููุท** ุนูู ูุชูุฉ ููุฏ Mermaid.js ููุง ุดูุก ุขุฎุฑ.

        ูุซุงู ูููุถูุน "Akkusativ Prรคpositionen":
        \`\`\`mermaid
        graph TD
            A[Prรคpositionen mit Akkusativ <br> ุญุฑูู ุงูุฌุฑ ูุน ุงูููุนูู ุจู] --> B{durch <br> ุนุจุฑ};
            A --> C{fรผr <br> ูุฃุฌู};
            A --> D{gegen <br> ุถุฏ};
            A --> E{ohne <br> ุจุฏูู};
            A --> F{um <br> ุญูู};
            B --> G["Ich gehe <b>durch</b> den Park."];
            C --> H["Das Geschenk ist <b>fรผr</b> dich."];
        \`\`\`
        `;

        const response = await ai.models.generateContent({
            model: 'gemini-2.5-flash',
            contents: prompt,
            config: {
                systemInstruction: systemInstruction,
                temperature: 0.3,
            }
        });

        const text = response.text;
    
        // Try to find a fenced code block first. This is the most reliable way.
        // It handles ```mermaid, ```, and potential surrounding text from the model.
        const mermaidCodeMatch = text.match(/```(?:mermaid)?\s*([\s\S]*?)\s*```/);
        if (mermaidCodeMatch && mermaidCodeMatch[1]) {
            return mermaidCodeMatch[1].trim();
        }

        // If no block is found, assume the entire response might be the code.
        // This is for cases where the model returns raw code without fences.
        // We check for common Mermaid keywords to be safer.
        const trimmedText = text.trim();
        if (trimmedText.startsWith('graph') || trimmedText.startsWith('mindmap')) {
            return trimmedText;
        }
        
        // If we are here, the response is likely not what we want.
        // Throwing an error is better than letting mermaid.js fail silently.
        throw new Error("ูุดู ูู ุงุณุชุฎุฑุงุฌ ุงููุฎุทุท. ูู ูุชู ุงูุนุซูุฑ ุนูู ููุฏ Mermaid.js ุตุงูุญ ูู ุงุณุชุฌุงุจุฉ ุงูุฐูุงุก ุงูุงุตุทูุงุนู.");


    } catch (error) {
        console.error("Error generating diagram from Gemini API:", error);
        if (error instanceof Error && error.message.includes("ูุดู ูู ุงุณุชุฎุฑุงุฌ ุงููุฎุทุท")) {
            throw error;
        }
        throw new Error("ูุดู ูู ุฅูุดุงุก ุงููุฎุทุท. ุงูุฑุฌุงุก ุงูุชุญูู ูู ุงุชุตุงูู ูุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู.");
    }
};